// Необходимо написать регулярное выражение, которое при вызове test на строке будет давать false,
// если в строке есть символы отличные от латинских, цифр, подчеркивания и знака $.
const myRegExp = new RegExp(/^[\w$|( ?)]+$/);

console.log(myRegExp.test('hello    world')); // true
console.log(myRegExp.test('hello    мир')); // false
console.log(myRegExp.test('Hello $name')); // true
console.log(myRegExp.test('привет')); // false


// Необходимо создать массив на основе строки
// Элементы в строке разделены сепараторами ; и ,. Необходимо возвращать первый числовой элемент ; последовательности.

const myRegExp2 = new RegExp(/,\d+,\d+;/);
console.log('762120,0,22;763827,0,50;750842,0,36;749909,0,95;755884,0,41;'.split(myRegExp2)); // ['762120', '763827', '750842', '749909', '755884', ''])

// Итератор на основе строки
// Необходимо создать итератор на основе исходной строки.
const myRegExp3 = new RegExp(/"\w+": (\d+|"\w+")/g);
console.log('{"a": 1, "b": "2"}'.matchAll(myRegExp3));


// Необходимо написать функцию, которая принимает строковый шаблон и объект параметров, и возвращает результат применения данных к этому шаблону
// Hello, Bob! Your age is 10.

const format = (template, options) => template.replace(/\${(\w+)}/g, (_, key) => options[key]);
console.log(format('Hello, ${user}! Your age is ${age}.', {user: 'Bob', age: 10})); // Hello, Bob! Your age is 10.


// Нахождение арифметических операций в строке и замена на результат
// calc(`
// Какой-то текст (10 + 15 - 24) ** 2
// Еще какой то текст 2 * 10
// `) == `
// Какой-то текст 1
// Еще какой-то текст 20
// `

const calc = (string) => {
    return string
        .replace(/\(?\d+(\s(\+|-|\*|\**)\s\d+\)?)*/g, (match) => new Function(`return ${match}`)());
}

calc(`
Какой-то текст (10 + 15 - 24) ** 2
Еще какой то текст 2 * 10
`);
// Какой-то текст 1
// Еще какой то текст 20
